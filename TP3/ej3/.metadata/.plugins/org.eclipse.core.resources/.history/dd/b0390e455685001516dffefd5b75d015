import java.util.Arrays;
import java.util.LinkedList;

public class Nodo 
{
	private int id;
	private boolean visitado;
	private int color;
	private boolean[] seguimientoColoresTotales; //Almacena todos los colores seteando un bool para los que tiene.
	private LinkedList<Integer> coloresPosibles; //almacena solo los colores que ese nodo puede tener.
	
	public int getId() 
	{
		return id;
	}
	public void setId(int id) 
	{
		this.id = id;
	}
	public int getColor() 
	{
		return color;
	}
	public void setColor(int color) 
	{
		this.color = color;
	}
	
	/*El nodo lleva seguimiento de dos estructuras de colores: una de una lista con los colores habilitados para él, para iterar facilmente. La otra,
	 con todos los colores que tenga el grafo, seteada en true en aquellas posiciones que respondan a colores propios, permite preguntar en O(1) si el nodo
	 permite ser pintado de determinado color*/
	public void setColores(int[] coloresPosibles, int cantidadDeColoresDelGrafo) 
	{
		this.seguimientoColoresTotales = new boolean[cantidadDeColoresDelGrafo];
		Arrays.fill(this.seguimientoColoresTotales, false);

		for (int i = 0; i < coloresPosibles.length; i++)
		{
			this.coloresPosibles.add(coloresPosibles[i]);
			this.seguimientoColoresTotales[i] = true;
		}
	}
	public boolean isVisitado() 
	{
		return visitado;
	}
	public void setVisitado(boolean visitado) 
	{
		this.visitado = visitado;
	}
	public boolean[] getColoresTotales()
	{
		return coloresTotales;
	}
	
}
